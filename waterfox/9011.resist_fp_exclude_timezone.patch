diff --git a/js/src/vm/DateTime.cpp b/js/src/vm/DateTime.cpp
index 0dd93e0..37a3364 100644
--- a/js/src/vm/DateTime.cpp
+++ b/js/src/vm/DateTime.cpp
@@ -39,9 +39,7 @@
 
 /* static */
 js::DateTimeInfo::ShouldRFP js::DateTimeInfo::shouldRFP(JS::Realm* realm) {
-  return realm->behaviors().shouldResistFingerprinting()
-             ? DateTimeInfo::ShouldRFP::Yes
-             : DateTimeInfo::ShouldRFP::No;
+  return DateTimeInfo::ShouldRFP::No;
 }
 
 static bool ComputeLocalTime(time_t local, struct tm* ptm) {
@@ -234,7 +232,7 @@ void js::DateTimeInfo::updateTimeZone() {
 }
 
 js::DateTimeInfo::DateTimeInfo(bool shouldResistFingerprinting)
-    : shouldResistFingerprinting_(shouldResistFingerprinting) {
+    : shouldResistFingerprinting_(shouldResistFingerprinting && false) {
   // Set the time zone status into the invalid state, so we compute the actual
   // defaults on first access. We don't yet want to initialize neither <ctime>
   // nor ICU's time zone classes, because that may cause I/O operations slowing
@@ -486,7 +484,7 @@ mozilla::intl::TimeZone* js::DateTimeInfo::timeZone() {
   if (!timeZone_) {
     // For resist finger printing mode we always use the UTC time zone.
     mozilla::Maybe<mozilla::Span<const char16_t>> timeZoneOverride;
-    if (shouldResistFingerprinting_) {
+    if (shouldResistFingerprinting_ && false) {
       timeZoneOverride = mozilla::Some(mozilla::MakeStringSpan(u"UTC"));
     }
 
@@ -755,7 +753,7 @@ void js::DateTimeInfo::internalResyncICUDefaultTimeZone() {
   // instance depending on the resist fingerprinting status. For now we return
   // early to prevent overwriting the default time zone with the UTC time zone
   // used by RFP.
-  if (shouldResistFingerprinting_) {
+  if (shouldResistFingerprinting_ && false) {
     return;
   }
 
diff --git a/toolkit/components/resistfingerprinting/nsRFPService.cpp b/toolkit/components/resistfingerprinting/nsRFPService.cpp
index 42dca79..c923bde 100644
--- a/toolkit/components/resistfingerprinting/nsRFPService.cpp
+++ b/toolkit/components/resistfingerprinting/nsRFPService.cpp
@@ -226,7 +226,7 @@ void nsRFPService::UpdateRFPPref() {
     return;
   }
 
-  if (resistFingerprinting) {
+  if (resistFingerprinting && false) {
     PR_SetEnv("TZ=UTC");
   } else if (sInitialized) {
     // We will not touch the TZ value if 'privacy.resistFingerprinting' is false
@@ -261,7 +261,7 @@ void nsRFPService::UpdateRFPPref() {
 
   // If and only if the time zone was changed above, propagate the change to the
   // <time.h> functions and the JS runtime.
-  if (resistFingerprinting || sInitialized) {
+  if ((resistFingerprinting && false) || sInitialized) {
     // localtime_r (and other functions) may not call tzset, so do this here
     // after changing TZ to ensure all <time.h> functions use the new time zone.
 #if defined(XP_WIN)
